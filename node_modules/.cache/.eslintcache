[{"C:\\Users\\ashik\\Documents\\marklist\\src\\index.js":"1","C:\\Users\\ashik\\Documents\\marklist\\src\\App.js":"2","C:\\Users\\ashik\\Documents\\marklist\\src\\Mark.js":"3","C:\\Users\\ashik\\Documents\\marklist\\src\\Table.js":"4","C:\\Users\\ashik\\Documents\\marklist\\src\\Title.js":"5","C:\\Users\\ashik\\Documents\\marklist\\src\\MarkModal.js":"6"},{"size":253,"mtime":1693992334882,"results":"7","hashOfConfig":"8"},{"size":742,"mtime":1694147428592,"results":"9","hashOfConfig":"8"},{"size":3381,"mtime":1694145171038,"results":"10","hashOfConfig":"8"},{"size":2372,"mtime":1694145171038,"results":"11","hashOfConfig":"8"},{"size":292,"mtime":1693101721685,"results":"12","hashOfConfig":"8"},{"size":3239,"mtime":1694075952031,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fsiztc",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\ashik\\Documents\\marklist\\src\\index.js",[],[],"C:\\Users\\ashik\\Documents\\marklist\\src\\App.js",[],[],"C:\\Users\\ashik\\Documents\\marklist\\src\\Mark.js",["34","35","36","37"],[],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MarkModal from \"./MarkModal\";\r\nimport Title from \"./Title\";\r\n\r\nconst Mark = () => {\r\n  const [mark, setMark] = useState(null);\r\n  const { id } = useParams();\r\n  var grandTotal = 0;\r\n  var CGPA = 0;\r\n\r\n  useEffect(() => {\r\n    const temp = localStorage.getItem(\"total-marks\");\r\n    if (temp != null) {\r\n      const new_mark = JSON.parse(temp).filter((m) => parseInt(m.mark_id) === parseInt(id));\r\n      setMark(new_mark);\r\n    } else {\r\n      fetch(\"https://my-json-server.typicode.com/Ashikam263/marklist/mark\")\r\n      .then((res) => res.json())\r\n      .then((mark) => {\r\n\r\n        localStorage.setItem(\"total-marks\", JSON.stringify(mark));\r\n        const new_mark = mark.filter((m) => parseInt(m.mark_id) === parseInt(id));\r\n        setMark(new_mark);\r\n      });\r\n    } \r\n  }, [id]);\r\n\r\n  // useEffect(() => {\r\n  //   const temp = localStorage.getItem(\"total-marks\");\r\n  //   if (temp != null) {\r\n  //     const new_mark = JSON.parse(temp).filter((m) => parseInt(m.mark_id) === parseInt(id));\r\n  //     setMark(new_mark);\r\n  //   }\r\n  // }, [id])\r\n\r\n  const toAddTitle = () => {\r\n    if (mark !== null) {\r\n      if (mark.length === 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const toAddData = () => {\r\n    if (mark !== null) {\r\n      if (mark.length === 0) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const cgpa = () => {\r\n    if (mark !== null) {\r\n      mark.map((mark, key) => {\r\n        // var Key =parseInt(mark.key);\r\n        var First = mark.internal1;\r\n        var Second = mark.internal2;\r\n        var External = mark.external;\r\n        var Total = (parseInt(mark.external) + parseInt(mark.internal1) + parseInt(mark.internal2)) / 100;\r\n        grandTotal += Total;\r\n        CGPA = grandTotal / (key + 1);\r\n      });\r\n      return (CGPA * 10).toFixed(2);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {toAddTitle() && <Title title=\"No Marks Added\" />}\r\n\r\n      <form className=\"details\">\r\n        <MarkModal mark={mark} setMark={setMark} />\r\n      </form>\r\n\r\n      {toAddData() && <div className=\"tableHandle\">\r\n        <table className=\"markcells\">\r\n          <thead>\r\n            <tr>\r\n              <th>No:</th>\r\n              <th>Subject</th>\r\n              <th>Internal 1</th>\r\n              <th>Internal 2</th>\r\n              <th>External </th>\r\n              <th>Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {mark.map((mark, key) => (\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n                <td>{mark.subject}</td>\r\n                <td>{parseInt(mark.internal1)}</td>\r\n                <td>{parseInt(mark.internal2)}</td>\r\n                <td>{parseInt(mark.external)}</td>\r\n                <td>{parseInt(mark.external) + parseInt(mark.internal1) + parseInt(mark.internal2)}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td>CGPA</td>\r\n              <td>{cgpa(mark)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mark;\r\n","C:\\Users\\ashik\\Documents\\marklist\\src\\Table.js",[],[],"C:\\Users\\ashik\\Documents\\marklist\\src\\Title.js",[],[],"C:\\Users\\ashik\\Documents\\marklist\\src\\MarkModal.js",["38"],[],"import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst MarkModal = ({ mark, setMark }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const { id } = useParams();\r\n  const mark_id = id;\r\n\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [internal1, setinternal1] = useState(\"\");\r\n  const [internal2, setinternal2] = useState(\"\");\r\n  const [external, setexternal] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setSubject(\"\");\r\n    setinternal1(\"\");\r\n    setinternal2(\"\");\r\n    setexternal(\"\");\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const Mark = { subject, internal1, internal2, external, mark_id };\r\n    const cache = JSON.parse(localStorage.getItem(\"total-marks\"))\r\n    \r\n    if (cache != null) {\r\n      localStorage.setItem(\"total-marks\", JSON.stringify([...cache, Mark]));\r\n    }\r\n    localStorage.setItem(\"total-marks\", JSON.stringify([...cache, Mark]));\r\n    setMark([...mark, Mark])\r\n    reset();\r\n    handleClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" className='addmarks' onClick={handleOpen}>Add Marks</button>\r\n      <Modal\r\n        onClose={handleClose}\r\n        open={open}\r\n        className= \"\"\r\n      >\r\n        <div>\r\n          <div className=\"modal-header\">\r\n            <h1 className=\"modal-title\">Enter Marks</h1>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>SUBJECT:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={subject}\r\n                  onChange={(e) => setSubject(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>First internal mark(25): </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  value={internal1}\r\n                  onChange={(e) => setinternal1(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Second internal mark(25):</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  value={internal2}\r\n                  onChange={(e) => setinternal2(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>External mark(50): </label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  value={external}\r\n                  onChange={(e) => setexternal(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <button>Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkModal;",{"ruleId":"39","severity":1,"message":"40","line":63,"column":28,"nodeType":"41","messageId":"42","endLine":63,"endColumn":30},{"ruleId":"43","severity":1,"message":"44","line":65,"column":13,"nodeType":"45","messageId":"46","endLine":65,"endColumn":18},{"ruleId":"43","severity":1,"message":"47","line":66,"column":13,"nodeType":"45","messageId":"46","endLine":66,"endColumn":19},{"ruleId":"43","severity":1,"message":"48","line":67,"column":13,"nodeType":"45","messageId":"46","endLine":67,"endColumn":21},{"ruleId":"43","severity":1,"message":"49","line":2,"column":20,"nodeType":"45","messageId":"46","endLine":2,"endColumn":29},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'First' is assigned a value but never used.","Identifier","unusedVar","'Second' is assigned a value but never used.","'External' is assigned a value but never used.","'useEffect' is defined but never used."]